AWSTemplateFormatVersion: 2010-09-09
Parameters:
  VPCStackName:
    Description: Name of CF stack providing the VPC where Gitea instance will reside
    Type: String

  ImageID:
    Description: AMI ID of EC2 Gitea instance
    Type: String

  InstanceType:
    Description: Instance type of EC2 Gitea instance
    Type: String

  KeyName:
    Description: Name of SSH key pair for EC2 Gitea instance
    Type: String

  IAMInstanceProfile:
    Description: Name of IAM instance profile for EC2 Gitea instance
    Type: String

Resources:
  EC2:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            DeleteOnTermination: true
            Encrypted: true
            VolumeSize: 8
            VolumeType: gp3
      CreditSpecification:
        CPUCredits: standard
      IamInstanceProfile: !Ref IAMInstanceProfile
      ImageId: !Ref ImageID
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds: [!Ref EC2SecurityGroup]
      SubnetId:
        Fn::ImportValue:
          !Sub subnet-private-a-id-${VPCStackName}
      Tags:
        - Key: Name
          Value: !Sub ec2-gitea-${AWS::StackName}
      UserData:
        Fn::Base64: !Sub |
          #!/usr/bin/env -S bash -xe

          # Update system
          apt update && apt upgrade -y

          # Install dependencies
          apt install -y postgresql

          # Improve PostgreSQL password security
          echo 'password_encryption = scram-sha-256' | tee -a /etc/postgresql/12/main/postgresql.conf

          # Restart PSQL
          systemctl restart postgresql

          # TODO: Provide/auto-generate a more secure password
          gitea_db_password=gitea

          # Add gitea user
          su -c "psql -c \"CREATE ROLE gitea WITH LOGIN PASSWORD '$gitea_db_password';\"" - postgres

          # Create DB
          su -c "psql -c \"CREATE DATABASE giteadb WITH OWNER gitea TEMPLATE template0 ENCODING UTF8 LC_COLLATE 'en_US.UTF-8' LC_CTYPE 'en_US.UTF-8';\"" - postgres

          # Allow access to DB
          sed -i '1s/^/local giteadb gitea scram-sha-256\n/' /etc/postgresql/12/main/pg_hba.conf

          # Restart PSQL
          systemctl restart postgresql

          # Download Gitea signing key (https://docs.gitea.io/en-us/install-from-binary/#verify-gpg-signature)
          gpg --keyserver keys.openpgp.org --recv 7C9E68152594688862D62AF62D9AE806EC1592E2

          # Download Gitea
          mkdir /opt/gitea
          wget -P /opt/gitea https://dl.gitea.io/gitea/1.13.6/gitea-1.13.6-linux-arm64
          wget -P /opt/gitea https://dl.gitea.io/gitea/1.13.6/gitea-1.13.6-linux-arm64.asc

          # Verify Gitea signature
          gpg --verify /opt/gitea/gitea-1.13.6-linux-arm64.asc

          adduser \
            --system \
            --shell /bin/bash \
            --gecos 'Git Version Control' \
            --group \
            --disabled-password \
            --home /home/git \
            git

          mkdir -p /var/lib/gitea/{custom,data,log}
          chown -R git:git /var/lib/gitea
          chmod -R 750 /var/lib/gitea
          mkdir /etc/gitea
          chown root:git /etc/gitea
          chmod 770 /etc/gitea

          cp /opt/gitea/gitea-1.13.6-linux-arm64 /usr/local/bin/gitea
          chmod +x /usr/local/bin/gitea

          echo '[Unit]
          Description=Gitea (Git with a cup of tea)
          After=syslog.target
          After=network.target
          Requires=postgresql.service

          [Service]
          LimitMEMLOCK=infinity
          LimitNOFILE=65535
          RestartSec=2s
          Type=simple
          User=git
          Group=git
          WorkingDirectory=/var/lib/gitea/
          ExecStart=/usr/local/bin/gitea web --config /etc/gitea/app.ini
          Restart=always
          Environment=USER=git HOME=/home/git GITEA_WORK_DIR=/var/lib/gitea
          # Don'"'"'t forget to place git-lfs binary on the PATH below if you want to enable
          # Git LFS support
          #Environment=PATH=/path/to/git/bin:/bin:/sbin:/usr/bin:/usr/sbin
          # If you want to bind Gitea to a port below 1024, uncomment
          # the two values below, or use socket activation to pass Gitea its ports as above
          ###
          #CapabilityBoundingSet=CAP_NET_BIND_SERVICE
          #AmbientCapabilities=CAP_NET_BIND_SERVICE
          ###

          [Install]
          WantedBy=multi-user.target' | tee /etc/systemd/system/gitea.service

          systemctl daemon-reload
          systemctl enable gitea
          systemctl start gitea

          # TODO: Tighten permissions on /etc/gitea after install
          # chmod 750 /etc/gitea
          # chmod 640 /etc/gitea/app.ini

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: String
      GroupName: !Sub ec2-gitea-sg-${AWS::StackName}
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all traffic
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
      VpcId:
        Fn::ImportValue:
          !Sub vpc-id-${VPCStackName}